#include <iostream>
#include <cmath>
#include <iomanip>

using namespace std;

using ll = long long;
using ld = long double;

const ld g0 = 9.80665; // ускорение свободного падения
const ld e_num = 2.71828; // число Эйлера

const ld w = 2796; // скорость истечения несимметричного диметилгидразина из сопла двигателя

const ll m0 = 450510; // масса ракеты на 1 стадии с толпливом (gross mass)
const ll m1 = 167828; // масса ракеты на 2 стадии с топливом (gross mass)
const ll m2 = 50747; // масса ракеты на 3 стадии с топливом (gross mass)
const ll mf = 1842; // финальная масса ракеты без топлива при посадке на Луну (dry mass)
const ll ms = 5725; // начальная масса Луны-16
const ll mm = 520; // масса Луны-16 на момент взлета с Луны
const ll mk = 225; // конечная масса Луны-16 без топлива

// Характеристическая скорость
void deltaVelocity() {
    const ld dv1 = w * log(ld(m0) / mf); // До Луны

    const ld dv2 = w * log(ld(mm) / mk); // До Земли

    cout << "Характеристическая скорость от Земли до Луны = " << dv1 << " m/s" << '\n';
    cout << "Характеристическая скорость от Луны до Земли = " << dv2 << " m/s" << '\n';

    cout << '\n';
}

// Удельный импульс
void Impulse() {
    ld I0 = ld(w) / g0; // Удельный импульс у Земли
    cout << "Удельный импульс ракеты у Земли = " << I0 << " sec" << '\n';

    cout << '\n';
}

// Первая стадия
const ll mp1 = 419410; // масса топлива, сгоревшая за стадию
const ll t1 = 124; // время сгорания топлива за данную стадию
const ll thrust1 = 10470000; // максимальная сила тяги на стадии

// Вторая стадия
const ll mp2 = 156113; // масса топлива, сгоревшая за стадию
const ll t2 = 206; // время сгорания топлива за данную стадию
const ll thrust2 = 2399000; // максимальная сила тяги на стадии

// Третья стадия
const ll mp3 = 46562; // масса топлива, сгоревшая за стадию
const ll t3 = 238; // время сгорания топлива за данную стадию
const ll thrust3 = 613800; // максимальная сила тяги на стадии

const ll v1 = 9400; // характеричтичсекая скорость, необходимая для выхода на околоземную орбиту Земли
const ll v2 = v1 + 3260 + 680; // прибавляем характерстическую скорость, необходимую для выхода на окололунную орбиту
const ll v3 = v2 + 1730; // прибавляем характерстическую скорость, необходимую для приземления на Луну

void burnTime() {
    ld power1 = -(v1 / w);
    ld dT1 = (m0 * w * (1 - pow(e_num, power1))) / thrust1;

    ld power2 = -(v2 / w);
    ld dT2 = (m1 * w * (1 - pow(e_num, power2))) / thrust2;

    ld power3 = -(v3 / w);
    ld dT3 = (m2 * w * (1 - pow(e_num, power3))) / thrust3;

    cout << "Время горения для 1 стадии ракеты: " << dT1 << " sec" << '\n';
    cout << "Отличие от реального значения: " << t1 - dT1 << " sec" << '\n';

    cout << '\n';

    cout << "Время горения для 2 стадии ракеты: " << dT2 << " sec" <<  '\n';
    cout << "Отличие от реального значения: " << t2 - dT2 << " sec" <<  '\n';

    cout << '\n';

    cout << "Время горения для 3 стадии ракеты: " << dT3 << " sec" << '\n';
    cout << "Отличие от реального значения: " << t3 - dT3 << " sec" << '\n';

    cout << '\n';
}

void burnAmount() {
    ld power = v1 / w;
    ld p1 = m0 - (m0 / pow(e_num, power));

    ld power2 = v2 / w;
    ld p2 = m1 - (m1 / pow(e_num, power2));

    ld power3 = v3 / w;
    ld p3 = m2 - (m2 / pow(e_num, power3));

    cout << "Масса топлива, сгоревшего за 1 стадию: " << p1 << " kg" << '\n';
    cout << "Отличие от реального значения: " << abs(mp1 - p1) << " kg" << '\n';

    cout << '\n';

    cout << "Масса топлива, сгоревшего за 2 стадию: " << p2 << " kg" << '\n';
    cout << "Отличие от реального значения: " << abs(mp2 - p2) << " kg" << '\n';

    cout << '\n';

    cout << "Масса топлива, сгоревшего за 3 стадию: " << p3 << " kg" << '\n';
    cout << "Отличие от реального значения: " << abs(mp3 - p3) << " kg" << '\n';

    cout << '\n';
}

void propellantFlow() {
    ld pf1 = thrust1 / w;
    ld pf2 = thrust2 / w;
    ld pf3 = thrust3 / w;

    cout << "Скорость расхода топлива на 1 стадии: " << pf1 << " kg/s" << '\n';
    cout << '\n';
    
    cout << "Скорость расхода топлива на 2 стадии: " << pf2 << " kg/s" << '\n';
    cout << '\n';

    cout << "Скорость расхода топлива на 3 стадии: " << pf3 << " kg/s" << '\n';
}

int main() {

    cout << fixed << setprecision(2);

    Impulse();
   
    deltaVelocity();

    burnTime();

    burnAmount();

    propellantFlow();
    
    return 0;
}